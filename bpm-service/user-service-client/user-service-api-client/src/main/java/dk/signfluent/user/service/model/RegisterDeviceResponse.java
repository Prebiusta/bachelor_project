/*
 * TITLE
 * DESCRIPTION
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dk.signfluent.user.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dk.signfluent.user.service.model.DeviceEntity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * RegisterDeviceResponse
 */
@JsonPropertyOrder({
  RegisterDeviceResponse.JSON_PROPERTY_DEVICE_ENTITY,
  RegisterDeviceResponse.JSON_PROPERTY_MESSAGE,
  RegisterDeviceResponse.JSON_PROPERTY_SUCCESSFUL
})
@JsonTypeName("RegisterDeviceResponse")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-14T14:41:50.888430+02:00[Europe/Copenhagen]")
public class RegisterDeviceResponse {
  public static final String JSON_PROPERTY_DEVICE_ENTITY = "deviceEntity";
  private DeviceEntity deviceEntity;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_SUCCESSFUL = "successful";
  private Boolean successful;


  public RegisterDeviceResponse deviceEntity(DeviceEntity deviceEntity) {
    
    this.deviceEntity = deviceEntity;
    return this;
  }

   /**
   * Get deviceEntity
   * @return deviceEntity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEVICE_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeviceEntity getDeviceEntity() {
    return deviceEntity;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceEntity(DeviceEntity deviceEntity) {
    this.deviceEntity = deviceEntity;
  }


  public RegisterDeviceResponse message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public RegisterDeviceResponse successful(Boolean successful) {
    
    this.successful = successful;
    return this;
  }

   /**
   * Get successful
   * @return successful
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuccessful() {
    return successful;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccessful(Boolean successful) {
    this.successful = successful;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisterDeviceResponse registerDeviceResponse = (RegisterDeviceResponse) o;
    return Objects.equals(this.deviceEntity, registerDeviceResponse.deviceEntity) &&
        Objects.equals(this.message, registerDeviceResponse.message) &&
        Objects.equals(this.successful, registerDeviceResponse.successful);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceEntity, message, successful);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisterDeviceResponse {\n");
    sb.append("    deviceEntity: ").append(toIndentedString(deviceEntity)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    successful: ").append(toIndentedString(successful)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

